{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { State, Selector, Action } from '@ngxs/store';\nimport { AddPanier, SubPanier } from '../action/produit.action'; // user.state.ts\n\nlet PanierState = class PanierState {\n  static getProduits(state) {\n    return state.produits;\n  }\n\n  static countProduits(state) {\n    return state.produits.length;\n  }\n\n  add({\n    getState,\n    patchState\n  }, {\n    payload\n  }) {\n    const state = getState(); //console.log('state');\n\n    /*\r\n    patchState({\r\n        produits: [...state.produits, payload]\r\n    });\r\n    */\n\n    if (state.produits.find(elem => elem.libelle == payload.libelle)) {\n      patchState({\n        produits: state.produits.map(p => p.libelle !== payload.libelle ? p : Object.assign(Object.assign({}, p), {\n          qteCommande: p.qteCommande + 1\n        }))\n      }); //console.log(\"+1\");\n    } else {\n      patchState({\n        produits: [...state.produits, Object.assign(Object.assign({}, payload), {\n          qteCommande: 1\n        })]\n      }); //console.log(\"set 1\");\n    }\n  }\n\n  sub({\n    getState,\n    patchState\n  }, {\n    payload\n  }) {\n    var _a;\n\n    const state = getState(); //console.log('state');\n\n    if (((_a = state.produits.find(elem => elem.libelle == payload.libelle)) === null || _a === void 0 ? void 0 : _a.qteCommande) > 1) {\n      patchState({\n        produits: state.produits.map(p => p.libelle !== payload.libelle ? p : Object.assign(Object.assign({}, p), {\n          qteCommande: p.qteCommande - 1\n        }))\n      });\n    } else {\n      patchState({\n        produits: state.produits.filter(produit => produit.libelle !== payload.libelle)\n      });\n    }\n    /*\r\n    patchState({\r\n        produits: state.produits.filter(produit => produit.libelle !== payload.libelle)\r\n    })\r\n    */\n\n  }\n\n};\n\n__decorate([Action(AddPanier)], PanierState.prototype, \"add\", null);\n\n__decorate([Action(SubPanier)], PanierState.prototype, \"sub\", null);\n\n__decorate([Selector()], PanierState, \"getProduits\", null);\n\n__decorate([Selector()], PanierState, \"countProduits\", null);\n\nPanierState = __decorate([State({\n  name: 'produit',\n  defaults: {\n    produits: []\n  }\n})], PanierState);\nexport { PanierState };","map":null,"metadata":{},"sourceType":"module"}