{"ast":null,"code":"import { environment } from '../environments/environment';\nimport { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let MyserviceService = /*#__PURE__*/(() => {\n  class MyserviceService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.count = 0;\n    }\n\n    getCatalogue() {\n      return this.httpClient.get(environment.baseUrl).pipe(tap(v => console.log(v)));\n    }\n    /*\r\n    public getCatalogue() : Observable<Array<{ title: string, price: number }>> {\r\n      return of([\r\n        {title: \"linux\", price: 9.50},\r\n        {title: \"angular\", price: 8.50},\r\n        {title: \"java\", price: 6.50},\r\n        {title: \"windows\", price: 8.00},\r\n        {title: \"docker\", price: 7.50}\r\n      ]);\r\n    }\r\n    */\n\n\n    getClient() {\n      return [{\n        name: 'francois',\n        firstName: 'dupont'\n      }, {\n        name: 'marc',\n        firstName: 'freyeux'\n      }];\n    }\n\n    postClient() {}\n\n    postLogin() {}\n\n    getCount() {\n      this.count++;\n      return this.count;\n    }\n\n  }\n\n  MyserviceService.ɵfac = function MyserviceService_Factory(t) {\n    return new (t || MyserviceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  MyserviceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MyserviceService,\n    factory: MyserviceService.ɵfac,\n    providedIn: 'root'\n  });\n  return MyserviceService;\n})();","map":null,"metadata":{},"sourceType":"module"}