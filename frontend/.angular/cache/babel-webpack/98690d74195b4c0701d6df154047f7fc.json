{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Select } from '@ngxs/store';\nimport { AddAdresse, SubAdresse } from 'shared/action/adresse.action';\nimport { AdresseState } from 'shared/state/adresse.state';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngxs/store\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../verification-formulaire.directive\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../recapitulatif/recapitulatif.component\";\n\nfunction AdresseComponent_ul_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵelement(1, \"hr\");\n    i0.ɵɵelementStart(2, \"li\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"li\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"li\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"li\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function AdresseComponent_ul_33_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const a_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.subToAdresse(a_r2);\n    });\n    i0.ɵɵtext(11, \"Supprimer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"br\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const a_r2 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Adresse: \", a_r2.adress, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Ville : \", a_r2.city, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Code postal : \", a_r2.cp, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Pays : \", a_r2.country, \"\");\n  }\n}\n\nfunction AdresseComponent_app_recapitulatif_61_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-recapitulatif\", 29);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    let tmp_5_0;\n    let tmp_6_0;\n    let tmp_7_0;\n    let tmp_8_0;\n    let tmp_9_0;\n    let tmp_10_0;\n    i0.ɵɵproperty(\"name\", (tmp_0_0 = ctx_r1.profileForme.get(\"name\")) == null ? null : tmp_0_0.value)(\"firstName\", (tmp_1_0 = ctx_r1.profileForme.get(\"firstName\")) == null ? null : tmp_1_0.value)(\"adress\", (tmp_2_0 = ctx_r1.profileForme.get(\"adress\")) == null ? null : tmp_2_0.value)(\"cp\", (tmp_3_0 = ctx_r1.profileForme.get(\"cp\")) == null ? null : tmp_3_0.value)(\"city\", (tmp_4_0 = ctx_r1.profileForme.get(\"city\")) == null ? null : tmp_4_0.value)(\"country\", (tmp_5_0 = ctx_r1.profileForme.get(\"country\")) == null ? null : tmp_5_0.value)(\"email\", (tmp_6_0 = ctx_r1.profileForme.get(\"email\")) == null ? null : tmp_6_0.value)(\"phone\", (tmp_7_0 = ctx_r1.profileForme.get(\"phone\")) == null ? null : tmp_7_0.value)(\"civility\", (tmp_8_0 = ctx_r1.profileForme.get(\"civility\")) == null ? null : tmp_8_0.value)(\"login\", (tmp_9_0 = ctx_r1.profileForme.get(\"login\")) == null ? null : tmp_9_0.value)(\"password\", (tmp_10_0 = ctx_r1.profileForme.get(\"password\")) == null ? null : tmp_10_0.value);\n  }\n}\n\nexport class AdresseComponent {\n  constructor(store) {\n    this.store = store;\n    this.name = \"default\";\n    this.profileForme = new FormGroup({\n      firstName: new FormControl(''),\n      name: new FormControl(''),\n      adress: new FormControl(''),\n      cp: new FormControl(''),\n      city: new FormControl(''),\n      country: new FormControl(''),\n      phone: new FormControl(''),\n      email: new FormControl(''),\n      civility: new FormControl(''),\n      login: new FormControl(''),\n      //confirmPassword: new FormControl(''),\n      password: new FormControl('')\n    });\n    this.isValid = false;\n  }\n\n  ngOnInit() {}\n\n  submitForm() {\n    this.isValid = this.profileForme.valid;\n  }\n\n  addToAdresse() {\n    let adresse = {\n      adress: this.profileForme.get('adress').value,\n      city: this.profileForme.get('city').value,\n      cp: this.profileForme.get('cp').value,\n      country: this.profileForme.get('country').value\n    };\n    this.store.dispatch(new AddAdresse(adresse)); //console.log(adresse);\n  }\n\n  subToAdresse(adresse) {\n    this.store.dispatch(new SubAdresse(adresse));\n  }\n\n}\n\nAdresseComponent.ɵfac = function AdresseComponent_Factory(t) {\n  return new (t || AdresseComponent)(i0.ɵɵdirectiveInject(i1.Store));\n};\n\nAdresseComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdresseComponent,\n  selectors: [[\"app-adresse\"]],\n  inputs: {\n    name: \"name\"\n  },\n  decls: 62,\n  vars: 8,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"firstName\"], [\"type\", \"text\", \"formControlName\", \"firstName\", \"name\", \"firstName\", \"placeholder\", \"Fran\\u00E7ois\", \"autofocus\", \"\", \"required\", \"\"], [\"for\", \"name\"], [\"type\", \"text\", \"formControlName\", \"name\", \"name\", \"name\", \"placeholder\", \"Dupond\", \"required\", \"\"], [\"for\", \"adress\"], [\"type\", \"text\", \"formControlName\", \"adress\", \"name\", \"adress\", \"placeholder\", \"25 rue principale\", \"required\", \"\"], [\"for\", \"city\"], [\"type\", \"text\", \"formControlName\", \"city\", \"name\", \"city\", \"placeholder\", \"Colmar\", \"required\", \"\"], [\"for\", \"cp\"], [\"type\", \"text\", \"formControlName\", \"cp\", \"name\", \"cp\", \"placeholder\", \"68000\", \"pattern\", \"[0-9]{5}\", \"appVerificationFormulaire\", \"\", \"required\", \"\"], [\"for\", \"country\"], [\"type\", \"text\", \"formControlName\", \"country\", \"name\", \"country\", \"placeholder\", \"France\", \"required\", \"\"], [\"type\", \"button\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [\"for\", \"phone\"], [\"type\", \"phone\", \"formControlName\", \"phone\", \"name\", \"phone\", \"placeholder\", \"06XXXXXXXX\", \"pattern\", \"[0-9]{10}\", \"appVerificationFormulaire\", \"\"], [\"for\", \"email\"], [\"type\", \"email\", \"formControlName\", \"email\", \"name\", \"email\", \"placeholder\", \"name@example.com\", \"appVerificationFormulaire\", \"\", \"required\", \"\"], [\"for\", \"civility\"], [\"type\", \"text\", \"formControlName\", \"civility\", \"name\", \"civility\", \"placeholder\", \"MR,MME,...\", \"required\", \"\"], [\"for\", \"login\"], [\"type\", \"text\", \"formControlName\", \"login\", \"name\", \"login\", \"placeholder\", \"troglo\", \"required\", \"\"], [\"for\", \"password\"], [\"type\", \"password\", \"formControlName\", \"password\", \"name\", \"password\", \"placeholder\", \"Mot de passe\", \"required\", \"\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [3, \"name\", \"firstName\", \"adress\", \"cp\", \"city\", \"country\", \"email\", \"phone\", \"civility\", \"login\", \"password\", 4, \"ngIf\"], [3, \"click\"], [3, \"name\", \"firstName\", \"adress\", \"cp\", \"city\", \"country\", \"email\", \"phone\", \"civility\", \"login\", \"password\"]],\n  template: function AdresseComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"adresse works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"body\");\n      i0.ɵɵelementStart(3, \"h1\");\n      i0.ɵɵtext(4, \"Formulaire d'inscription\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AdresseComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(6, \"div\", 1);\n      i0.ɵɵelementStart(7, \"label\", 2);\n      i0.ɵɵtext(8, \"Pr\\u00E9nom\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 1);\n      i0.ɵɵelementStart(11, \"label\", 4);\n      i0.ɵɵtext(12, \"Nom\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"hr\");\n      i0.ɵɵelementStart(15, \"div\", 1);\n      i0.ɵɵelementStart(16, \"label\", 6);\n      i0.ɵɵtext(17, \"Adresse\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 1);\n      i0.ɵɵelementStart(20, \"label\", 8);\n      i0.ɵɵtext(21, \"Ville\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 1);\n      i0.ɵɵelementStart(24, \"label\", 10);\n      i0.ɵɵtext(25, \"Code postal\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 1);\n      i0.ɵɵelementStart(28, \"label\", 12);\n      i0.ɵɵtext(29, \"Pays\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function AdresseComponent_Template_button_click_31_listener() {\n        return ctx.addToAdresse();\n      });\n      i0.ɵɵtext(32, \"Ajouter une adresse\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(33, AdresseComponent_ul_33_Template, 13, 4, \"ul\", 15);\n      i0.ɵɵpipe(34, \"async\");\n      i0.ɵɵelementStart(35, \"p\");\n      i0.ɵɵtext(36);\n      i0.ɵɵpipe(37, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(38, \"hr\");\n      i0.ɵɵelementStart(39, \"div\", 1);\n      i0.ɵɵelementStart(40, \"label\", 16);\n      i0.ɵɵtext(41, \"T\\u00E9l\\u00E9phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(42, \"input\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"div\", 1);\n      i0.ɵɵelementStart(44, \"label\", 18);\n      i0.ɵɵtext(45, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(46, \"input\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"div\", 1);\n      i0.ɵɵelementStart(48, \"label\", 20);\n      i0.ɵɵtext(49, \"Civilit\\u00E9\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(50, \"input\", 21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"div\", 1);\n      i0.ɵɵelementStart(52, \"label\", 22);\n      i0.ɵɵtext(53, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(54, \"input\", 23);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(55, \"div\", 1);\n      i0.ɵɵelementStart(56, \"label\", 24);\n      i0.ɵɵtext(57, \"Mot de passe\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(58, \"input\", 25);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(59, \"button\", 26);\n      i0.ɵɵtext(60, \"Valider\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(61, AdresseComponent_app_recapitulatif_61_Template, 1, 11, \"app-recapitulatif\", 27);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.profileForme);\n      i0.ɵɵadvance(28);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(34, 4, ctx.getAdresse$));\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"Nombre d'adresses : \", i0.ɵɵpipeBind1(37, 6, ctx.nbAdresse$), \"\");\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"ngIf\", ctx.isValid == true);\n    }\n  },\n  directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i2.RequiredValidator, i2.PatternValidator, i3.VerificationFormulaireDirective, i4.NgForOf, i4.NgIf, i5.RecapitulatifComponent],\n  pipes: [i4.AsyncPipe],\n  styles: [\"\"]\n});\n\n__decorate([Select(AdresseState.countAdresses)], AdresseComponent.prototype, \"nbAdresse$\", void 0);\n\n__decorate([Select(AdresseState.getAdresses)], AdresseComponent.prototype, \"getAdresse$\", void 0);","map":null,"metadata":{},"sourceType":"module"}